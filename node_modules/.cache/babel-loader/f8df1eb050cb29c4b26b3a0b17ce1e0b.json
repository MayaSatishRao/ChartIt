{"ast":null,"code":"var _jsxFileName = \"D:\\\\chartjs\\\\chart\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Graph from './components/Graph';\nimport './App.css';\nimport FileUpload from \"./components/FileUpload\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [[\"Graph-Title\", \"X-axis label\", \"Y-axis label\"], ['\"Month\"', ' \"1958\"', ' \"1959\"', ' \"1960\"'], ['\"JAN\"', '  340', '  360', '  417'], ['\"FEB\"', '  318', '  342', '  391'], ['\"MAR\"', '  362', '  406', '  419'], ['\"APR\"', '  348', '  396', '  461'], ['\"MAY\"', '  363', '  420', '  472'], ['\"JUN\"', '  435', '  472', '  535'], ['\"JUL\"', '  491', '  548', '  622'], ['\"AUG\"', '  505', '  559', '  606'], ['\"SEP\"', '  404', '  463', '  508'], ['\"OCT\"', '  359', '  407', '  461'], ['\"NOV\"', '  310', '  362', '  390'], ['\"DEC\"', '  337', '  405', '  432']];\n\nfunction App() {\n  _s();\n\n  const [chartData, setChartData] = useState(data);\n  const [type, setType] = useState(\"bar\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CHARTIT \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Upload your csv file and get the chart!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please make sure that your csv file has the following:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      changeState: setChartData,\n      changeType: setType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Graph, {\n      chartData: chartData,\n      type: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"li1ZziO5+80p0GfA8tEcusTSP9E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Graph","FileUpload","data","App","chartData","setChartData","type","setType"],"sources":["D:/chartjs/chart/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport Graph from './components/Graph';\nimport './App.css';\nimport FileUpload from \"./components/FileUpload\";\n\n\nconst data = [[\"Graph-Title\",\"X-axis label\",\"Y-axis label\"]\n  ,['\"Month\"', ' \"1958\"', ' \"1959\"', ' \"1960\"']\n, ['\"JAN\"', '  340', '  360', '  417']\n,['\"FEB\"', '  318', '  342', '  391']\n, ['\"MAR\"', '  362', '  406', '  419']\n, ['\"APR\"', '  348', '  396', '  461']\n, ['\"MAY\"', '  363', '  420', '  472']\n, ['\"JUN\"', '  435', '  472', '  535']\n, ['\"JUL\"', '  491', '  548', '  622']\n, ['\"AUG\"', '  505', '  559', '  606']\n, ['\"SEP\"', '  404', '  463', '  508']\n, ['\"OCT\"', '  359', '  407', '  461']\n, ['\"NOV\"', '  310', '  362', '  390']\n, ['\"DEC\"', '  337', '  405', '  432']]\n\nfunction App() {\n\n  const [chartData, setChartData] = useState(data);\n  const [type,setType] = useState(\"bar\");\n  return (\n    <div >\n    <h1>CHARTIT </h1>\n    <p> Upload your csv file and get the chart!</p>\n    <p>Please make sure that your csv file has the following:</p>\n    \n      <FileUpload changeState={setChartData} changeType={setType}/>\n      <Graph chartData={chartData} type={type}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAGA,MAAMC,IAAI,GAAG,CAAC,CAAC,aAAD,EAAe,cAAf,EAA8B,cAA9B,CAAD,EACV,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CADU,EAEX,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,CAFW,EAGZ,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,CAHY,EAIX,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,CAJW,EAKX,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,CALW,EAMX,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,CANW,EAOX,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,CAPW,EAQX,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,CARW,EASX,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,CATW,EAUX,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,CAVW,EAWX,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,CAXW,EAYX,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,CAZW,EAaX,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,CAbW,CAAb;;AAeA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAACG,IAAD,CAA1C;EACA,MAAM,CAACI,IAAD,EAAMC,OAAN,IAAiBR,QAAQ,CAAC,KAAD,CAA/B;EACA,oBACE;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHA,eAKE,QAAC,UAAD;MAAY,WAAW,EAAEM,YAAzB;MAAuC,UAAU,EAAEE;IAAnD;MAAA;MAAA;MAAA;IAAA,QALF,eAME,QAAC,KAAD;MAAO,SAAS,EAAEH,SAAlB;MAA6B,IAAI,EAAEE;IAAnC;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GAdQH,G;;KAAAA,G;AAgBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}