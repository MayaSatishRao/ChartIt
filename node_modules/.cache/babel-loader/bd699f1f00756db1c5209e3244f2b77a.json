{"ast":null,"code":"var _jsxFileName = \"D:\\\\chartjs\\\\chart\\\\src\\\\components\\\\Graph.js\";\nimport { Bar, Line, Pie } from \"react-chartjs-2\";\nimport { Chart as ChartJS } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = [\"#D291BC\", \"#B8DBD0\", \"#FFAF68\", \"#E8A68E\", \"9BB8ED\", \"A39FE1\", \"B3D9B2\"]; // initial label values\n\nlet labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"]; // initial datasets\n\nconst data = {\n  labels,\n  datasets: [{\n    label: \"Dataset 1\",\n    data: labels.map(() => Math.random() * 1000 + 1),\n    borderColor: \"rgb(255, 99, 132)\",\n    backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n  }, {\n    label: \"Dataset 2\",\n    data: labels.map(() => Math.random() * 1000 + 1),\n    borderColor: \"rgb(53, 162, 235)\",\n    backgroundColor: \"rgba(53, 162, 235, 0.5)\"\n  }]\n};\n\nfunction createLabels(arr) {\n  if (arr != undefined) {\n    let labels = [];\n\n    for (let i = 1; i < arr.length; i++) if (arr[i][0].length != 0) labels.push(arr[i][0]);\n\n    return labels;\n  }\n}\n\nfunction createDataSets(arr) {\n  if (arr == undefined) return;\n  let datasetsArray = [];\n\n  for (let i = 1; i < arr[0].length; i++) {\n    let dataArray = [];\n\n    for (let j = 1; j < arr.length; j++) {\n      if (arr[j][i] != undefined) dataArray.push(arr[j][i]);\n    }\n\n    let datasetObj = {\n      labels: arr[0][i],\n      data: dataArray\n    };\n    datasetsArray.push(datasetObj);\n  }\n\n  return datasetsArray;\n}\n\nfunction createOptions() {}\n\nconst Graph = _ref => {\n  let {\n    chartData\n  } = _ref;\n  let d = createDataSets(chartData),\n      l = createLabels(chartData);\n  if (d != undefined && l != undefined) return /*#__PURE__*/_jsxDEV(Bar, {\n    data: d,\n    labels: l\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["Bar","Line","Pie","Chart","ChartJS","colors","labels","data","datasets","label","map","Math","random","borderColor","backgroundColor","createLabels","arr","undefined","i","length","push","createDataSets","datasetsArray","dataArray","j","datasetObj","createOptions","Graph","chartData","d","l"],"sources":["D:/chartjs/chart/src/components/Graph.js"],"sourcesContent":["import { Bar , Line, Pie } from \"react-chartjs-2\";\r\nimport {Chart as ChartJS} from \"chart.js\";\r\n  \r\nconst colors = [\"#D291BC\", \"#B8DBD0\", \"#FFAF68\", \"#E8A68E\",\"9BB8ED\",\"A39FE1\",\"B3D9B2\"];\r\n\r\n// initial label values\r\nlet labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\r\n\r\n// initial datasets\r\nconst data = {\r\n  labels,\r\n  datasets: [\r\n    {\r\n      label: \"Dataset 1\",\r\n      data: labels.map(() => Math.random() * 1000 + 1),\r\n      borderColor: \"rgb(255, 99, 132)\",\r\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n    },\r\n    {\r\n      label: \"Dataset 2\",\r\n      data: labels.map(() => Math.random() * 1000 + 1),\r\n      borderColor: \"rgb(53, 162, 235)\",\r\n      backgroundColor: \"rgba(53, 162, 235, 0.5)\",\r\n    },\r\n  ],\r\n}; \r\n\r\nfunction createLabels(arr){\r\n       if(arr!=undefined){\r\n        let labels = [];\r\n        for(let i=1;i<arr.length;i++)\r\n              if(arr[i][0].length!=0)\r\n            labels.push(arr[i][0]);\r\n         return (labels); \r\n       }\r\n       \r\n}\r\n\r\n\r\nfunction createDataSets(arr){\r\n  if(arr==undefined)\r\n  return ;\r\n      let datasetsArray= [];\r\n      for(let i=1;i<arr[0].length;i++){\r\n            let dataArray = [];\r\n            for(let j=1;j<arr.length;j++){\r\n                if(arr[j][i]!=undefined)\r\n                dataArray.push(arr[j][i]);\r\n            }\r\n            let datasetObj = {\r\n                labels: arr[0][i],\r\n                data: dataArray\r\n            }\r\n            datasetsArray.push(datasetObj);\r\n      }\r\n      return datasetsArray;\r\n}\r\n\r\nfunction createOptions(){\r\n       \r\n}\r\nconst Graph = ({chartData})=>{\r\n\r\n    let d = createDataSets(chartData),l= createLabels(chartData);\r\n    if(d!=undefined && l!=undefined)\r\n    return <Bar data={d} labels={l}/>\r\n    \r\n    \r\n}\r\n\r\nexport default Graph;"],"mappings":"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"},"metadata":{},"sourceType":"module"}